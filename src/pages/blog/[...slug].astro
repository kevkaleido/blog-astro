---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import FormattedDate from "../../components/FormattedDate.astro";
import PostCard from "../../components/PostCard.astro";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post, posts },
	}));
}
type Props = {
	post: CollectionEntry<"blog">;
	posts: CollectionEntry<"blog">[];
};

const { post, posts } = Astro.props;
const { Content } = await post.render();

// Get related posts based on tags
const relatedPosts = posts
	.filter((p) => p.slug !== post.slug && p.data.tags.some((tag) => post.data.tags.includes(tag)))
	.slice(0, 3);
---

<Layout
	title={post.data.title}
	image={post.data.image}
	description={post.data.description}
	url={post.slug}
>
	<article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
		<div class="xl:divide-y xl:divide-gray-200 xl:dark:divide-gray-700">
			<header class="pt-6 xl:pb-6">
				<div class="space-y-4 text-center">
					<h1 class="text-3xl font-extrabold leading-tight text-gray-900 dark:text-gray-100 sm:text-4xl md:text-5xl">
						{post.data.title}
					</h1>
					<div class="flex flex-col items-center justify-center space-y-2">
						<div class="flex items-center space-x-2 text-gray-500 dark:text-gray-400">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
								<path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
							</svg>
							<time>
								<FormattedDate date={post.data.date} />
							</time>
						</div>
						<div class="flex flex-wrap justify-center">
							{post.data.tags && post.data.tags.map((tag) => (
								<a
									class="m-1 rounded-full bg-blue-100 px-3 py-1 text-sm font-medium text-blue-800 hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-200 dark:hover:bg-blue-800 transition duration-300 ease-in-out"
									href={`/blog/tags/${tag}`}
								>
									{tag}
								</a>
							))}
						</div>
					</div>
					<div class="mt-8">
						<Image
							class="rounded-xl w-full max-w-2xl mx-auto shadow-lg"
							src={post.data.image}
							alt={post.data.title}
							width={800}
							height={400}
						/>
					</div>
				</div>
			</header>
			<div class="divide-y divide-gray-200 dark:divide-gray-700 xl:col-span-3 xl:row-span-2 xl:pb-0">
				<div class="prose dark:prose-invert max-w-none pt-10 pb-8">
					<Content />
				</div>
			</div>
		</div>
	</article>
	<div class="bg-gray-50 dark:bg-gray-900 py-8 mt-12">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
			<h2 class="text-2xl font-bold mb-4 text-gray-900 dark:text-gray-100">Related posts</h2>
			{relatedPosts.length > 0 ? (
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
					{relatedPosts.map((relatedPost) => (
						<PostCard post={relatedPost} />
					))}
				</div>
			) : (
				<p class="text-gray-600 dark:text-gray-400">No related posts found.</p>
			)}
		</div>
	</div>
</Layout>
