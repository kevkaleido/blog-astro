---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
interface Props {
	title: string;
	image?: string;
	description?: string;
	url?: string;
}

const {
	title,
	image = "",
	description = "Welcome to my website!",
	url = "",
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<title>{title} | KEV</title>
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Facebook Meta Tags -->
		<meta property="og:url" content={url} />
		<meta property="og:type" content="website" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={image} />

		<!-- Twitter Meta Tags -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta property="twitter:domain" content="zzhgo.com" />
		<meta property="twitter:url" content={url} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta property="twitter:image" content={image} />

		<script is:inline>
			function loadGiscus() {
				const theme = localStorage.getItem('theme') === 'dark' ? 'dark' : 'light';
				const script = document.createElement('script');
				script.src = 'https://giscus.app/client.js';
				script.setAttribute('data-repo', 'kevkaleido/blog-astro');
				script.setAttribute('data-repo-id', 'R_kgDOMj8uAw');
				script.setAttribute('data-category', '[ENTER CATEGORY NAME HERE]');
				script.setAttribute('data-category-id', '[ENTER CATEGORY ID HERE]');
				script.setAttribute('data-mapping', 'pathname');
				script.setAttribute('data-strict', '0');
				script.setAttribute('data-reactions-enabled', '1');
				script.setAttribute('data-emit-metadata', '0');
				script.setAttribute('data-input-position', 'bottom');
				script.setAttribute('data-theme', theme);
				script.setAttribute('data-lang', 'en');
				script.setAttribute('crossorigin', 'anonymous');
				script.async = true;

				const comments = document.getElementById('comments');
				if (comments) comments.appendChild(script);
			}

			// Load Giscus after the page has loaded
			window.addEventListener('load', loadGiscus);
		</script>
	</head>
	<body
		class="bg-gradient-to-b from-blue-100 via-white to-green-100 dark:bg-gradient-to-b dark:from-gray-800 dark:via-gray-700 dark:to-gray-800 text-gray-900 dark:text-gray-100 antialiased"
	>
		<div class="mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-4xl xl:px-0">
			<Header />
			<slot class="mb-auto" />
			<Footer />
		</div>
	</body>
</html>

<script is:inline>
	const theme = (() => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
			return "dark";
		}
		return "light";
	})();

	if (theme === "light") {
		document.documentElement.classList.remove("dark");
	} else {
		document.documentElement.classList.add("dark");
	}

	window.localStorage.setItem("theme", theme);

	const handleToggleClick = () => {
		const element = document.documentElement;
		element.classList.toggle("dark");

		const isDark = element.classList.contains("dark");
		localStorage.setItem("theme", isDark ? "dark" : "light");
	};

	document
		.getElementById("themeToggle")
		.addEventListener("click", handleToggleClick);
</script>
